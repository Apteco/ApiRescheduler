/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Details for the definition of a template to create
    /// </summary>
    [DataContract]
        public partial class CreateExportTemplateDetail :  IEquatable<CreateExportTemplateDetail>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateExportTemplateDetail" /> class.
        /// </summary>
        /// <param name="title">The title for this export template.</param>
        /// <param name="exportTemplateDefinition">exportTemplateDefinition (required).</param>
        /// <param name="exportTemplateLookup">exportTemplateLookup.</param>
        public CreateExportTemplateDetail(string title = default(string), ExportTemplateDefinition exportTemplateDefinition = default(ExportTemplateDefinition), SystemLookup exportTemplateLookup = default(SystemLookup))
        {
            // to ensure "exportTemplateDefinition" is required (not null)
            if (exportTemplateDefinition == null)
            {
                throw new InvalidDataException("exportTemplateDefinition is a required property for CreateExportTemplateDetail and cannot be null");
            }
            else
            {
                this.ExportTemplateDefinition = exportTemplateDefinition;
            }
            this.Title = title;
            this.ExportTemplateLookup = exportTemplateLookup;
        }
        
        /// <summary>
        /// The title for this export template
        /// </summary>
        /// <value>The title for this export template</value>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets ExportTemplateDefinition
        /// </summary>
        [DataMember(Name="exportTemplateDefinition", EmitDefaultValue=false)]
        public ExportTemplateDefinition ExportTemplateDefinition { get; set; }

        /// <summary>
        /// Gets or Sets ExportTemplateLookup
        /// </summary>
        [DataMember(Name="exportTemplateLookup", EmitDefaultValue=false)]
        public SystemLookup ExportTemplateLookup { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateExportTemplateDetail {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  ExportTemplateDefinition: ").Append(ExportTemplateDefinition).Append("\n");
            sb.Append("  ExportTemplateLookup: ").Append(ExportTemplateLookup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateExportTemplateDetail);
        }

        /// <summary>
        /// Returns true if CreateExportTemplateDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateExportTemplateDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateExportTemplateDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.ExportTemplateDefinition == input.ExportTemplateDefinition ||
                    (this.ExportTemplateDefinition != null &&
                    this.ExportTemplateDefinition.Equals(input.ExportTemplateDefinition))
                ) && 
                (
                    this.ExportTemplateLookup == input.ExportTemplateLookup ||
                    (this.ExportTemplateLookup != null &&
                    this.ExportTemplateLookup.Equals(input.ExportTemplateLookup))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.ExportTemplateDefinition != null)
                    hashCode = hashCode * 59 + this.ExportTemplateDefinition.GetHashCode();
                if (this.ExportTemplateLookup != null)
                    hashCode = hashCode * 59 + this.ExportTemplateLookup.GetHashCode();
                return hashCode;
            }
        }
    }
}
