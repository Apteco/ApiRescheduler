/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Lookup information for peoplestage elements
    /// </summary>
    [DataContract]
        public partial class PeopleStageLookup :  IEquatable<PeopleStageLookup>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PeopleStageLookup" /> class.
        /// </summary>
        /// <param name="peopleStageElementsLookup">A list of peoplestage elements (required).</param>
        /// <param name="peopleStageChannelsLookup">A list of peoplestage channels (required).</param>
        public PeopleStageLookup(List<ElementSummary> peopleStageElementsLookup = default(List<ElementSummary>), List<ChannelSummary> peopleStageChannelsLookup = default(List<ChannelSummary>))
        {
            // to ensure "peopleStageElementsLookup" is required (not null)
            if (peopleStageElementsLookup == null)
            {
                throw new InvalidDataException("peopleStageElementsLookup is a required property for PeopleStageLookup and cannot be null");
            }
            else
            {
                this.PeopleStageElementsLookup = peopleStageElementsLookup;
            }
            // to ensure "peopleStageChannelsLookup" is required (not null)
            if (peopleStageChannelsLookup == null)
            {
                throw new InvalidDataException("peopleStageChannelsLookup is a required property for PeopleStageLookup and cannot be null");
            }
            else
            {
                this.PeopleStageChannelsLookup = peopleStageChannelsLookup;
            }
        }
        
        /// <summary>
        /// A list of peoplestage elements
        /// </summary>
        /// <value>A list of peoplestage elements</value>
        [DataMember(Name="peopleStageElementsLookup", EmitDefaultValue=false)]
        public List<ElementSummary> PeopleStageElementsLookup { get; set; }

        /// <summary>
        /// A list of peoplestage channels
        /// </summary>
        /// <value>A list of peoplestage channels</value>
        [DataMember(Name="peopleStageChannelsLookup", EmitDefaultValue=false)]
        public List<ChannelSummary> PeopleStageChannelsLookup { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PeopleStageLookup {\n");
            sb.Append("  PeopleStageElementsLookup: ").Append(PeopleStageElementsLookup).Append("\n");
            sb.Append("  PeopleStageChannelsLookup: ").Append(PeopleStageChannelsLookup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PeopleStageLookup);
        }

        /// <summary>
        /// Returns true if PeopleStageLookup instances are equal
        /// </summary>
        /// <param name="input">Instance of PeopleStageLookup to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PeopleStageLookup input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PeopleStageElementsLookup == input.PeopleStageElementsLookup ||
                    this.PeopleStageElementsLookup != null &&
                    input.PeopleStageElementsLookup != null &&
                    this.PeopleStageElementsLookup.SequenceEqual(input.PeopleStageElementsLookup)
                ) && 
                (
                    this.PeopleStageChannelsLookup == input.PeopleStageChannelsLookup ||
                    this.PeopleStageChannelsLookup != null &&
                    input.PeopleStageChannelsLookup != null &&
                    this.PeopleStageChannelsLookup.SequenceEqual(input.PeopleStageChannelsLookup)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PeopleStageElementsLookup != null)
                    hashCode = hashCode * 59 + this.PeopleStageElementsLookup.GetHashCode();
                if (this.PeopleStageChannelsLookup != null)
                    hashCode = hashCode * 59 + this.PeopleStageChannelsLookup.GetHashCode();
                return hashCode;
            }
        }
    }
}
