/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// TimeZoneInfoDetail
    /// </summary>
    [DataContract]
        public partial class TimeZoneInfoDetail :  IEquatable<TimeZoneInfoDetail>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TimeZoneInfoDetail" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="standardName">standardName.</param>
        /// <param name="daylightName">daylightName.</param>
        /// <param name="currentUtcOffsetInMinutes">currentUtcOffsetInMinutes.</param>
        public TimeZoneInfoDetail(string id = default(string), string displayName = default(string), string standardName = default(string), string daylightName = default(string), int? currentUtcOffsetInMinutes = default(int?))
        {
            this.Id = id;
            this.DisplayName = displayName;
            this.StandardName = standardName;
            this.DaylightName = daylightName;
            this.CurrentUtcOffsetInMinutes = currentUtcOffsetInMinutes;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="displayName", EmitDefaultValue=false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets StandardName
        /// </summary>
        [DataMember(Name="standardName", EmitDefaultValue=false)]
        public string StandardName { get; set; }

        /// <summary>
        /// Gets or Sets DaylightName
        /// </summary>
        [DataMember(Name="daylightName", EmitDefaultValue=false)]
        public string DaylightName { get; set; }

        /// <summary>
        /// Gets or Sets CurrentUtcOffsetInMinutes
        /// </summary>
        [DataMember(Name="currentUtcOffsetInMinutes", EmitDefaultValue=false)]
        public int? CurrentUtcOffsetInMinutes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TimeZoneInfoDetail {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  StandardName: ").Append(StandardName).Append("\n");
            sb.Append("  DaylightName: ").Append(DaylightName).Append("\n");
            sb.Append("  CurrentUtcOffsetInMinutes: ").Append(CurrentUtcOffsetInMinutes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TimeZoneInfoDetail);
        }

        /// <summary>
        /// Returns true if TimeZoneInfoDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TimeZoneInfoDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimeZoneInfoDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.StandardName == input.StandardName ||
                    (this.StandardName != null &&
                    this.StandardName.Equals(input.StandardName))
                ) && 
                (
                    this.DaylightName == input.DaylightName ||
                    (this.DaylightName != null &&
                    this.DaylightName.Equals(input.DaylightName))
                ) && 
                (
                    this.CurrentUtcOffsetInMinutes == input.CurrentUtcOffsetInMinutes ||
                    (this.CurrentUtcOffsetInMinutes != null &&
                    this.CurrentUtcOffsetInMinutes.Equals(input.CurrentUtcOffsetInMinutes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.StandardName != null)
                    hashCode = hashCode * 59 + this.StandardName.GetHashCode();
                if (this.DaylightName != null)
                    hashCode = hashCode * 59 + this.DaylightName.GetHashCode();
                if (this.CurrentUtcOffsetInMinutes != null)
                    hashCode = hashCode * 59 + this.CurrentUtcOffsetInMinutes.GetHashCode();
                return hashCode;
            }
        }
    }
}
