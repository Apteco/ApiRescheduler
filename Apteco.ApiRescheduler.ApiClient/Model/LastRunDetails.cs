/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// LastRunDetails
    /// </summary>
    [DataContract]
        public partial class LastRunDetails :  IEquatable<LastRunDetails>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LastRunDetails" /> class.
        /// </summary>
        /// <param name="systemName">systemName.</param>
        /// <param name="systemLoadDate">systemLoadDate.</param>
        /// <param name="userName">userName.</param>
        /// <param name="runDate">runDate.</param>
        public LastRunDetails(string systemName = default(string), DateTime? systemLoadDate = default(DateTime?), string userName = default(string), DateTime? runDate = default(DateTime?))
        {
            this.SystemName = systemName;
            this.SystemLoadDate = systemLoadDate;
            this.UserName = userName;
            this.RunDate = runDate;
        }
        
        /// <summary>
        /// Gets or Sets SystemName
        /// </summary>
        [DataMember(Name="systemName", EmitDefaultValue=false)]
        public string SystemName { get; set; }

        /// <summary>
        /// Gets or Sets SystemLoadDate
        /// </summary>
        [DataMember(Name="systemLoadDate", EmitDefaultValue=false)]
        public DateTime? SystemLoadDate { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name="userName", EmitDefaultValue=false)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets RunDate
        /// </summary>
        [DataMember(Name="runDate", EmitDefaultValue=false)]
        public DateTime? RunDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LastRunDetails {\n");
            sb.Append("  SystemName: ").Append(SystemName).Append("\n");
            sb.Append("  SystemLoadDate: ").Append(SystemLoadDate).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  RunDate: ").Append(RunDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LastRunDetails);
        }

        /// <summary>
        /// Returns true if LastRunDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of LastRunDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LastRunDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SystemName == input.SystemName ||
                    (this.SystemName != null &&
                    this.SystemName.Equals(input.SystemName))
                ) && 
                (
                    this.SystemLoadDate == input.SystemLoadDate ||
                    (this.SystemLoadDate != null &&
                    this.SystemLoadDate.Equals(input.SystemLoadDate))
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.RunDate == input.RunDate ||
                    (this.RunDate != null &&
                    this.RunDate.Equals(input.RunDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SystemName != null)
                    hashCode = hashCode * 59 + this.SystemName.GetHashCode();
                if (this.SystemLoadDate != null)
                    hashCode = hashCode * 59 + this.SystemLoadDate.GetHashCode();
                if (this.UserName != null)
                    hashCode = hashCode * 59 + this.UserName.GetHashCode();
                if (this.RunDate != null)
                    hashCode = hashCode * 59 + this.RunDate.GetHashCode();
                return hashCode;
            }
        }
    }
}
