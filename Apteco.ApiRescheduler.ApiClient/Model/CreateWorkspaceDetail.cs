/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Details used to create a workspace
    /// </summary>
    [DataContract]
        public partial class CreateWorkspaceDetail :  IEquatable<CreateWorkspaceDetail>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateWorkspaceDetail" /> class.
        /// </summary>
        /// <param name="title">The title of the workspace (required).</param>
        /// <param name="description">The description of the workspace.</param>
        /// <param name="resourcesToAdd">The list of keys for resources to add to this workspace.</param>
        public CreateWorkspaceDetail(string title = default(string), string description = default(string), List<WorkspaceResourceKey> resourcesToAdd = default(List<WorkspaceResourceKey>))
        {
            // to ensure "title" is required (not null)
            if (title == null)
            {
                throw new InvalidDataException("title is a required property for CreateWorkspaceDetail and cannot be null");
            }
            else
            {
                this.Title = title;
            }
            this.Description = description;
            this.ResourcesToAdd = resourcesToAdd;
        }
        
        /// <summary>
        /// The title of the workspace
        /// </summary>
        /// <value>The title of the workspace</value>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// The description of the workspace
        /// </summary>
        /// <value>The description of the workspace</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The list of keys for resources to add to this workspace
        /// </summary>
        /// <value>The list of keys for resources to add to this workspace</value>
        [DataMember(Name="resourcesToAdd", EmitDefaultValue=false)]
        public List<WorkspaceResourceKey> ResourcesToAdd { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateWorkspaceDetail {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ResourcesToAdd: ").Append(ResourcesToAdd).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateWorkspaceDetail);
        }

        /// <summary>
        /// Returns true if CreateWorkspaceDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateWorkspaceDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateWorkspaceDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ResourcesToAdd == input.ResourcesToAdd ||
                    this.ResourcesToAdd != null &&
                    input.ResourcesToAdd != null &&
                    this.ResourcesToAdd.SequenceEqual(input.ResourcesToAdd)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ResourcesToAdd != null)
                    hashCode = hashCode * 59 + this.ResourcesToAdd.GetHashCode();
                return hashCode;
            }
        }
    }
}
