/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Details for a BroadcastOutputSettings
    /// </summary>
    [DataContract]
        public partial class BroadcastOutputInstanceSettings :  IEquatable<BroadcastOutputInstanceSettings>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BroadcastOutputInstanceSettings" /> class.
        /// </summary>
        /// <param name="uploadListName">uploadListName.</param>
        /// <param name="messageName">messageName.</param>
        /// <param name="useMessageNameAsListName">useMessageNameAsListName.</param>
        public BroadcastOutputInstanceSettings(AttributeValue uploadListName = default(AttributeValue), AttributeValue messageName = default(AttributeValue), bool? useMessageNameAsListName = default(bool?))
        {
            this.UploadListName = uploadListName;
            this.MessageName = messageName;
            this.UseMessageNameAsListName = useMessageNameAsListName;
        }
        
        /// <summary>
        /// Gets or Sets UploadListName
        /// </summary>
        [DataMember(Name="uploadListName", EmitDefaultValue=false)]
        public AttributeValue UploadListName { get; set; }

        /// <summary>
        /// Gets or Sets MessageName
        /// </summary>
        [DataMember(Name="messageName", EmitDefaultValue=false)]
        public AttributeValue MessageName { get; set; }

        /// <summary>
        /// Gets or Sets UseMessageNameAsListName
        /// </summary>
        [DataMember(Name="useMessageNameAsListName", EmitDefaultValue=false)]
        public bool? UseMessageNameAsListName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BroadcastOutputInstanceSettings {\n");
            sb.Append("  UploadListName: ").Append(UploadListName).Append("\n");
            sb.Append("  MessageName: ").Append(MessageName).Append("\n");
            sb.Append("  UseMessageNameAsListName: ").Append(UseMessageNameAsListName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BroadcastOutputInstanceSettings);
        }

        /// <summary>
        /// Returns true if BroadcastOutputInstanceSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of BroadcastOutputInstanceSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BroadcastOutputInstanceSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UploadListName == input.UploadListName ||
                    (this.UploadListName != null &&
                    this.UploadListName.Equals(input.UploadListName))
                ) && 
                (
                    this.MessageName == input.MessageName ||
                    (this.MessageName != null &&
                    this.MessageName.Equals(input.MessageName))
                ) && 
                (
                    this.UseMessageNameAsListName == input.UseMessageNameAsListName ||
                    (this.UseMessageNameAsListName != null &&
                    this.UseMessageNameAsListName.Equals(input.UseMessageNameAsListName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UploadListName != null)
                    hashCode = hashCode * 59 + this.UploadListName.GetHashCode();
                if (this.MessageName != null)
                    hashCode = hashCode * 59 + this.MessageName.GetHashCode();
                if (this.UseMessageNameAsListName != null)
                    hashCode = hashCode * 59 + this.UseMessageNameAsListName.GetHashCode();
                return hashCode;
            }
        }
    }
}
