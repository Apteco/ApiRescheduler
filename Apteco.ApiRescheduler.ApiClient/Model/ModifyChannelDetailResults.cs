/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Details used to modify an audience for a given user
    /// </summary>
    [DataContract]
        public partial class ModifyChannelDetailResults :  IEquatable<ModifyChannelDetailResults>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModifyChannelDetailResults" /> class.
        /// </summary>
        /// <param name="id">The id of the modified channel.</param>
        /// <param name="channel">channel.</param>
        /// <param name="succeeded">Whether the modification succeeded or not (required).</param>
        /// <param name="status">A status message associated with the modification (required).</param>
        /// <param name="statusCode">A status code associated with the modification (required).</param>
        public ModifyChannelDetailResults(string id = default(string), ModifyChannelDetail channel = default(ModifyChannelDetail), bool? succeeded = default(bool?), string status = default(string), int? statusCode = default(int?))
        {
            // to ensure "succeeded" is required (not null)
            if (succeeded == null)
            {
                throw new InvalidDataException("succeeded is a required property for ModifyChannelDetailResults and cannot be null");
            }
            else
            {
                this.Succeeded = succeeded;
            }
            // to ensure "status" is required (not null)
            if (status == null)
            {
                throw new InvalidDataException("status is a required property for ModifyChannelDetailResults and cannot be null");
            }
            else
            {
                this.Status = status;
            }
            // to ensure "statusCode" is required (not null)
            if (statusCode == null)
            {
                throw new InvalidDataException("statusCode is a required property for ModifyChannelDetailResults and cannot be null");
            }
            else
            {
                this.StatusCode = statusCode;
            }
            this.Id = id;
            this.Channel = channel;
        }
        
        /// <summary>
        /// The id of the modified channel
        /// </summary>
        /// <value>The id of the modified channel</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Channel
        /// </summary>
        [DataMember(Name="channel", EmitDefaultValue=false)]
        public ModifyChannelDetail Channel { get; set; }

        /// <summary>
        /// Whether the modification succeeded or not
        /// </summary>
        /// <value>Whether the modification succeeded or not</value>
        [DataMember(Name="succeeded", EmitDefaultValue=false)]
        public bool? Succeeded { get; set; }

        /// <summary>
        /// A status message associated with the modification
        /// </summary>
        /// <value>A status message associated with the modification</value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// A status code associated with the modification
        /// </summary>
        /// <value>A status code associated with the modification</value>
        [DataMember(Name="statusCode", EmitDefaultValue=false)]
        public int? StatusCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModifyChannelDetailResults {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Channel: ").Append(Channel).Append("\n");
            sb.Append("  Succeeded: ").Append(Succeeded).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModifyChannelDetailResults);
        }

        /// <summary>
        /// Returns true if ModifyChannelDetailResults instances are equal
        /// </summary>
        /// <param name="input">Instance of ModifyChannelDetailResults to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModifyChannelDetailResults input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Channel == input.Channel ||
                    (this.Channel != null &&
                    this.Channel.Equals(input.Channel))
                ) && 
                (
                    this.Succeeded == input.Succeeded ||
                    (this.Succeeded != null &&
                    this.Succeeded.Equals(input.Succeeded))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Channel != null)
                    hashCode = hashCode * 59 + this.Channel.GetHashCode();
                if (this.Succeeded != null)
                    hashCode = hashCode * 59 + this.Succeeded.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusCode != null)
                    hashCode = hashCode * 59 + this.StatusCode.GetHashCode();
                return hashCode;
            }
        }
    }
}
