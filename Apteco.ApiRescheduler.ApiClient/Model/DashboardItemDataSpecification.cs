/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// The details for any pre-defined dashboard items, that aren&#x27;t specified using dimensions and measures
    /// </summary>
    [DataContract]
        public partial class DashboardItemDataSpecification :  IEquatable<DashboardItemDataSpecification>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DashboardItemDataSpecification" /> class.
        /// </summary>
        /// <param name="cubeSpecification">cubeSpecification.</param>
        /// <param name="paretoSpecification">paretoSpecification.</param>
        /// <param name="vennSpecification">vennSpecification.</param>
        /// <param name="segmentationSpecification">segmentationSpecification.</param>
        public DashboardItemDataSpecification(CubeSpecification cubeSpecification = default(CubeSpecification), ParetoSpecification paretoSpecification = default(ParetoSpecification), VennSpecification vennSpecification = default(VennSpecification), SegmentationSpecification segmentationSpecification = default(SegmentationSpecification))
        {
            this.CubeSpecification = cubeSpecification;
            this.ParetoSpecification = paretoSpecification;
            this.VennSpecification = vennSpecification;
            this.SegmentationSpecification = segmentationSpecification;
        }
        
        /// <summary>
        /// Gets or Sets CubeSpecification
        /// </summary>
        [DataMember(Name="cubeSpecification", EmitDefaultValue=false)]
        public CubeSpecification CubeSpecification { get; set; }

        /// <summary>
        /// Gets or Sets ParetoSpecification
        /// </summary>
        [DataMember(Name="paretoSpecification", EmitDefaultValue=false)]
        public ParetoSpecification ParetoSpecification { get; set; }

        /// <summary>
        /// Gets or Sets VennSpecification
        /// </summary>
        [DataMember(Name="vennSpecification", EmitDefaultValue=false)]
        public VennSpecification VennSpecification { get; set; }

        /// <summary>
        /// Gets or Sets SegmentationSpecification
        /// </summary>
        [DataMember(Name="segmentationSpecification", EmitDefaultValue=false)]
        public SegmentationSpecification SegmentationSpecification { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DashboardItemDataSpecification {\n");
            sb.Append("  CubeSpecification: ").Append(CubeSpecification).Append("\n");
            sb.Append("  ParetoSpecification: ").Append(ParetoSpecification).Append("\n");
            sb.Append("  VennSpecification: ").Append(VennSpecification).Append("\n");
            sb.Append("  SegmentationSpecification: ").Append(SegmentationSpecification).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DashboardItemDataSpecification);
        }

        /// <summary>
        /// Returns true if DashboardItemDataSpecification instances are equal
        /// </summary>
        /// <param name="input">Instance of DashboardItemDataSpecification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DashboardItemDataSpecification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CubeSpecification == input.CubeSpecification ||
                    (this.CubeSpecification != null &&
                    this.CubeSpecification.Equals(input.CubeSpecification))
                ) && 
                (
                    this.ParetoSpecification == input.ParetoSpecification ||
                    (this.ParetoSpecification != null &&
                    this.ParetoSpecification.Equals(input.ParetoSpecification))
                ) && 
                (
                    this.VennSpecification == input.VennSpecification ||
                    (this.VennSpecification != null &&
                    this.VennSpecification.Equals(input.VennSpecification))
                ) && 
                (
                    this.SegmentationSpecification == input.SegmentationSpecification ||
                    (this.SegmentationSpecification != null &&
                    this.SegmentationSpecification.Equals(input.SegmentationSpecification))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CubeSpecification != null)
                    hashCode = hashCode * 59 + this.CubeSpecification.GetHashCode();
                if (this.ParetoSpecification != null)
                    hashCode = hashCode * 59 + this.ParetoSpecification.GetHashCode();
                if (this.VennSpecification != null)
                    hashCode = hashCode * 59 + this.VennSpecification.GetHashCode();
                if (this.SegmentationSpecification != null)
                    hashCode = hashCode * 59 + this.SegmentationSpecification.GetHashCode();
                return hashCode;
            }
        }
    }
}
