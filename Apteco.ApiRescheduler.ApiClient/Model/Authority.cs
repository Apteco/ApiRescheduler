/* 
 * Apteco API
 *
 * An API to allow access to Apteco Marketing Suite resources
 *
 * OpenAPI spec version: v2
 * Contact: support@apteco.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Apteco.ApiRescheduler.ApiClient.Client.SwaggerDateConverter;

namespace Apteco.ApiRescheduler.ApiClient.Model
{
    /// <summary>
    /// Authority
    /// </summary>
    [DataContract]
        public partial class Authority :  IEquatable<Authority>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Authority" /> class.
        /// </summary>
        /// <param name="authorityId">authorityId.</param>
        /// <param name="id">id.</param>
        public Authority(int? authorityId = default(int?), Id id = default(Id))
        {
            this.AuthorityId = authorityId;
            this.Id = id;
        }
        
        /// <summary>
        /// Gets or Sets AuthorityId
        /// </summary>
        [DataMember(Name="authorityId", EmitDefaultValue=false)]
        public int? AuthorityId { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Id Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Authority {\n");
            sb.Append("  AuthorityId: ").Append(AuthorityId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Authority);
        }

        /// <summary>
        /// Returns true if Authority instances are equal
        /// </summary>
        /// <param name="input">Instance of Authority to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Authority input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AuthorityId == input.AuthorityId ||
                    (this.AuthorityId != null &&
                    this.AuthorityId.Equals(input.AuthorityId))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AuthorityId != null)
                    hashCode = hashCode * 59 + this.AuthorityId.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                return hashCode;
            }
        }
    }
}
